;File developed by Mohnish Anand
(logging/init {:file "/var/log/riemann/riemann.log"})

(require 'riemann.client)

(let [host "127.0.0.1"]
(tcp-server {:host host})
(udp-server {:host host})
(ws-server {:host host}))

;(periodically-expire 5)
(periodically-expire 5 {:keep-keys [:host :service :tags]})

(let [index (index)
downstream (batch 100 1/10
(async-queue! :agg { :queue-size 1e3
:core-pool-size 4
:max-pool-size 32}
(forward
(riemann.client/tcp-client :host "riemannmc"))))]


;(let [index (index)]
(streams
(default :ttl 60
index
(where (and (service "disk /") (> metric 0.10))
#(info "Disk space on / is over 10%!" %))
;Defining where stream to select events and send it downstream.
(where (service #"^riemann.*")
downstream))))